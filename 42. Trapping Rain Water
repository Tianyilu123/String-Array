class Solution {
    public int trap(int[] height) {
        int n = height.length;
        Deque<Integer> stack = new ArrayDeque<>();
        int res = 0;
        int curIdx = 0;
        while(curIdx < n) {
            while(!stack.isEmpty() && height[curIdx] > height[stack.peek()]) {
                int top = stack.pop();
                if(stack.isEmpty()) break;
                int h = Math.min(height[stack.peek()], height[curIdx]) - height[top];
                int dist = curIdx - stack.peek() - 1;
                res += dist*h;
            }
            stack.push(curIdx++);
        }
        return res;
    }
}
